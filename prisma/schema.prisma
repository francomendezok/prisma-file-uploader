generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id       String   @id @default(cuid())
  username String   @unique
  password String
  folders  folder[] @relation("UserFolders") // Relación a `folder`
  files    file[]   @relation("UserFiles")   // Relación a `file`
}

model file {
  id        String   @id @default(cuid())
  name      String
  url       String
  userId    String
  user      user     @relation("UserFiles", fields: [userId], references: [id])
  size      Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  folders   FileFolder[] // Relación a la tabla intermedia
}

model folder {
  id        String        @id @default(cuid())
  name      String
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  userId    String         // Relación con el usuario
  user      user           @relation("UserFolders", fields: [userId], references: [id])
  files     FileFolder[]   // Relación a la tabla intermedia
}

/// Tabla intermedia para la relación muchos a muchos
model FileFolder {
  fileId   String
  folderId String
  file     file   @relation(fields: [fileId], references: [id])   // Relación con `file`
  folder   folder @relation(fields: [folderId], references: [id]) // Relación con `folder`

  @@id([fileId, folderId]) // Clave primaria compuesta
}

model Session {
  id        String   @id @default(cuid()) // Agregado valor predeterminado
  sid       String   @unique
  data      String
  expiresAt DateTime
}
